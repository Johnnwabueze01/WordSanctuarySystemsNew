generator client_mongo {
    provider = "prisma-client-js"
    output   = "./generated-clients/mongo"
}

datasource mongodb {
    provider = "mongodb"
    url      = env("MONGODB_CONN_URI")
}

enum LeaderShipLevel {
    PASTOR
    MINISTER
    HOD
    ASSISTANT_HOD
    EXECUTIVE_ASSISTANT
    WORKER
    MEMBER
}

enum AccessRequestsStatus {
    PENDING
    PROCESSING
    APPROVED
    DENIED
}

enum FinanceEntityType {
    DEPARTMENT
    INDIVIDUAL
    CENTRAL
    INSTALLATION
}

// test schema for checking db connection
model UserMongo {
    id    String @id @default(auto()) @map("_id") @mongodb.ObjectId
    name  String
    email String @unique
}

model ProfilesSnapShots {
    profile_snapshot_id String          @id @default(auto()) @map("_id") @mongodb.ObjectId
    profile_id          String
    name                String
    surname             String
    email               String
    giving_number       String
    leadership_level    LeaderShipLevel
    lifeclass_topic     Int
    mentor_profile_id   String
    kpi_result_id       String // used to associate snapshot with a specific kpi result
    createdAt           DateTime        @default(now()) // automatically set to the current date/time when the profile snapshot is created
    modifiedAt          DateTime        @updatedAt
}

model FinanceSnapShots {
    id            String            @id @default(auto()) @map("_id") @mongodb.ObjectId
    finance_id    String            @unique
    entity_type   FinanceEntityType // tell us the category the snapshot belongs to
    entity_id     String // tell us the specific id of the individual or installation or department that owns the snapshot
    kpi_result_id String // used to associate snapshot with a specific kpi result 
    createdAt     DateTime          @default(now()) // automatically set to the current date/time when the document is created
    modifiedAt    DateTime          @updatedAt
}

model DepartmentalSnapShots {
    deptSnapShotId String @id @default(auto()) @map("_id") @mongodb.ObjectId
    department_id  String @unique // tell us the specific id of the department that owns the snapshot

    snapshots Json // will be an array of department snapshots each with an id
}

model IndividualProfileSnapShots {
    profileSnapShotId String @id @default(auto()) @map("_id") @mongodb.ObjectId
    profile_id        String @unique // tell us the specific id of the department that owns the snapshot
    snapshots         Json // will be an array of individual profile each with an id of the person that owns the snapshot
}

model DepartmentalKpiResults {
    dept_kpi_result_id String @id @default(auto()) @map("_id") @mongodb.ObjectId
    department_id      String @unique // tell us the specific id of the department that owns the result

    kpis       Json // will be an array of results each with an id
    createdAt  DateTime @default(now()) // automatically set to the current date/time when the document is created
    modifiedAt DateTime @updatedAt
}

model AccessRequests {
    access_request_id       String               @id @default(auto()) @map("_id") @mongodb.ObjectId
    profile_id              String
    name                    String
    surname                 String
    email                   String
    leadership_level        LeaderShipLevel
    phone_contact           String
    access_details          String
    reasons_for_access      String
    status                  AccessRequestsStatus
    processed_by_profile_id String // profile_id of the person that is processing the request 
    createdAt               DateTime             @default(now())
    modifiedAt              DateTime             @updatedAt
}

model AuthTokens {
    token_id   String   @id @default(auto()) @map("_id") @mongodb.ObjectId
    token      String
    expiration Int
    email      String
    createdAt  DateTime @default(now())
    modifiedAt DateTime @updatedAt
}
